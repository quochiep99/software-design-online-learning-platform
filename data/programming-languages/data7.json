{
    "field": {
        "name": "programming-languages",
        "courses": []
    },
    "course": {
        "title": "Spring & Hibernate for Beginners (includes Spring Boot)",
        "subtitle": "Spring 5: Learn Spring 5 Core, AOP, Spring MVC, Spring Security, Spring REST, Spring Boot 2, Thymeleaf, JPA & Hibernate",
        "descriptions": [],
        "reviews": [],
        "students": [],
        "image1xURL": "https://img-a.udemycdn.com/course/240x135/647428_be28_6.jpg",
        "image2xURL": "https://img-a.udemycdn.com/course/480x270/647428_be28_6.jpg",
        "image3xURL": "https://img-a.udemycdn.com/course/750x422/647428_be28_6.jpg",
        "discountPrice": 11.99,
        "originalPrice": 129.99,
        "numViews": 0,
        "curriculum": []
    },
    "reviews": [
        {
            "body": "This is by far the best course I've come across on the internet. Chad is a very skilled instructor. His team is also very responsive for any type of queries. Totally worth it.\n\nNeedless to mention, but the prerequisite for this course is basics of core Java. Knowing the basics of SQL would also be very helpful.",
            "rating": 5
        },
        {
            "body": "You can read any of these information from internet. But teaching technique and experience is make change on your learning experience.\n\nChad made very good explanation and he use special pedagogue techniques which can deeply and easily push the students to understand the lecture.\n\nThank you so much to sharing your experience with us Chad!",
            "rating": 5
        },
        {
            "body": "Very good course. Mr. Darby delivers his explanations in a steady, slow and clear fashion, and his presentations are to the point! One of the best organized courses out there.",
            "rating": 4.5
        },
        {
            "body": "Highly recommend! This course is very useful with good structure. Chad explains how the components work step by step and gives some hint that might cause failure. It saved me lots of time without having to review a bunch of Spring articles nor trying errors while testing the study materials. Really appreciate!",
            "rating": 5
        },
        {
            "body": "It was good listening to Chad Darby. This course is very good for beginners to learn Spring, Hibernate but not recommend for advance. I would like to know Rest Client security but this course has not rest client security. so I give 4 start.",
            "rating": 4
        },
        {
            "body": "This is a truly outstanding course. Chad has clearly put a huge amount of thought and effort into the structure and content of the course to enable students to learn most effectively. I cannot recommend this course highly enough. Thank you Chad.",
            "rating": 5
        },
        {
            "body": "Hi Chad,\n\nThank you very much for the course. I got good understanding on spring core concepts and hibernate. Even though the course covers basic topics I was able to find many solutions for the issues in my daily office works.\n\nI would love to enroll in any advanced topic courses if you have.\n\nKeep up the good work.",
            "rating": 5
        },
        {
            "body": "HONEST REVIEW:- This course is amazing course. This is perfect for freshers. You will learn a lot of new concepts in this course. This course also provides expert help when needed to clear all your doubts at any time.\n\nThis covers almost all the basics topics. Still I felt there were couple of topics that should have been covered in more detail. For example: Dispatcher Servlet topic should have been covered in more detail. I had to do my own research to understand this in depth. This is one example. I felt there were couple of more topics, that I felt should have been covered in more detail.\n\nOverall, this is VERY GOOD course. Chad and his team have done a great work to make this Spring and Hibernate Course. You can see the hard work that has been put in this course. I would like to THANK Chad and his whole team for making this course and for all the help that you have provided me during this course. I am very glad that I took this course and would definitely recommend this course to anyone who is willing to learn Spring and Hibernate.\n\nChad, you and your team is great.\n\nAND\n\nChad you are very good teacher.\n\nTHANK YOU",
            "rating": 5
        },
        {
            "body": "Absolutely loved it!!! This course is awesome - there is so much content covering a ton of Spring and Hibernate topics from a practical perspective. I liked playing back the videos at 1.5x to 2x and loved the excitement and energy Chad brought to each and every lesson. The review first and then do a hands-on approach works great because you see it twice and have a better chance of understanding and retaining concepts.\n\nI'd love to see the instructor offer more courses, especially on AWS!\n\nChad, you're a gifted instructor so please, please, please do the world a huge favor and create some awesome AWS courses :-)",
            "rating": 5
        },
        {
            "body": "Chad has the gift for teaching! I really enjoyed the course! Thank you for the dedication and motivation in doing this! I learnt a lot!",
            "rating": 5
        },
        {
            "body": "Sometimes it's very long and some things can be explained quickly.\n\nIt will be REALLY better if there were something about messaging on STOMP (WebSockets, etc) and NoSQL.\n\nIn general - nice work) For noobies, it's the best choice.",
            "rating": 5
        },
        {
            "body": "There are so many good things to say about this course but, I'd like to enphasize two: for starters, this is one of the most \"non-english native speaker friendly\" courses I've taken on Udemy. Mr. Darby's has a crystal clear speech intelligibility and it make everything easier for us. The next best thing is the teaching methodology. It is consistent from top to bottom. This kind of predictability allows a perfect following of the course. This is very important if you want to learn something right. The Seinfeld's reference was also a plus... ;)",
            "rating": 5
        }
    ],
    "students": [
        {
            "name": "Vyasraj Joshi",
            "email": "vyasrajjoshi@gmail.com",
            "password": "vyasrajjoshi",
            "role": "s",
            "isConfirmed": true
        },
        {
            "name": "Anvar",
            "email": "anvar@gmail.com",
            "password": "anvar",
            "role": "s",
            "isConfirmed": true
        },
        {
            "name": "William Poletto",
            "email": "williampoletto@gmail.com",
            "password": "williampoletto",
            "role": "s",
            "isConfirmed": true
        },
        {
            "name": "Tessa",
            "email": "tessa@gmail.com",
            "password": "tessa",
            "role": "s",
            "isConfirmed": true
        },
        {
            "name": "Thanate Mongkonsutiwat",
            "email": "thanatemongkonsutiwat@gmail.com",
            "password": "thanatemongkonsutiwat",
            "role": "s",
            "isConfirmed": true
        },
        {
            "name": "David Clarke",
            "email": "davidclarke@gmail.com",
            "password": "davidclarke",
            "role": "s",
            "isConfirmed": true
        },
        {
            "name": "Chaitanya Yeluri",
            "email": "chaitanyayeluri@gmail.com",
            "password": "chaitanyayeluri",
            "role": "s",
            "isConfirmed": true
        },
        {
            "name": "Darshan",
            "email": "darshan@gmail.com",
            "password": "darshan",
            "role": "s",
            "isConfirmed": true
        },
        {
            "name": "Cosmic Sound",
            "email": "cosmicsound@gmail.com",
            "password": "cosmicsound",
            "role": "s",
            "isConfirmed": true
        },
        {
            "name": "Daniel Petrucci",
            "email": "danielpetrucci@gmail.com",
            "password": "danielpetrucci",
            "role": "s",
            "isConfirmed": true
        },
        {
            "name": "Anatolii Davydko",
            "email": "anatoliidavydko@gmail.com",
            "password": "anatoliidavydko",
            "role": "s",
            "isConfirmed": true
        },
        {
            "name": "Rafael de Queiroz Guzmán",
            "email": "rafaeldequeirozguzmán@gmail.com",
            "password": "rafaeldequeirozguzmán",
            "role": "s",
            "isConfirmed": true
        }
    ],
    "instructor": {
        "name": "Chad Darby",
        "email": "chaddarby@gmail.com",
        "password": "chaddarby",
        "role": "i",
        "briefIntroduction": "<p>Chád (shod) Darby is an author, instructor and speaker in the Java development world.&nbsp; </p><p>Chád is a contributing author to several Java books, including&nbsp; Professional Java E-Commerce (Wrox Press), Beginning Java Networking&nbsp; (Wrox Press), and XML and Web Services Unleashed (Sams Publishing).&nbsp; </p><p>Chád has Java certifications from Oracle and IBM.&nbsp;</p><p>He holds a B.S. in Computer Science from Carnegie Mellon University.&nbsp; </p>",
        "isConfirmed": true
    },
    "curriculum": [
        {
            "sectionName": "Course Introduction",
            "unitNames": [
                "Introduction",
                "Practice Activities - Overview",
                "How To Take This Course and How To Get Help",
                "Downloading the Source Code and PDF Files",
                "Closed Captions and Subtitles Available"
            ]
        },
        {
            "sectionName": "Spring Overview",
            "unitNames": [
                "Why Spring? - part 1",
                "Why Spring? - part 2",
                "Spring 5 Update",
                "Spring Core Framework - Part 1",
                "Spring Core Framework - Part 2",
                "Spring Platform"
            ]
        },
        {
            "sectionName": "Setting Up Your Development Environment",
            "unitNames": [
                "Dev Environment Overview",
                "Installing Tomcat",
                "Installing Eclipse",
                "Connecting Tomcat to Eclipse",
                "Downloading Spring 5 JAR Files - Overview",
                "Downloading Spring 5 JAR files - Installation"
            ]
        },
        {
            "sectionName": "Spring Inversion of Control - XML Configuration",
            "unitNames": [
                "What is Inversion of Control?",
                "Code Demo - Rough Prototype Part 1",
                "Code Demo - Rough Prototype Part 2",
                "Spring Inversion of Control - Overview",
                "FAQ: What is a Spring Bean?",
                "Spring Inversion of Control - Write Some Code - Part 1",
                "Spring Inversion of Control - Write Some Code - Part 2",
                "HEADS UP -  Add Logging Messages in Spring 5.1",
                "FAQ: Why do we specify the Coach interface in getBean()?",
                "Practice Activity #1 - Inversion of Control with XML Configuration"
            ]
        },
        {
            "sectionName": "Spring Dependency Injection - XML Configuration",
            "unitNames": [
                "Spring Dependency Injection - Overview",
                "Spring Dependency Injection - Behind the Scenes",
                "Spring Dependency Injection - Write Some Code - Part 1",
                "Spring Dependency Injection - Write Some Code - Part 2",
                "Spring Dependency Injection - Write Some Code - Part 3",
                "FAQ: What is the purpose for the no arg constructor?",
                "Setter Injection - Overview",
                "Setter Injection - Write Some Code - Part 1",
                "Setter Injection - Write Some Code - Part 2",
                "Injecting Literal Values - Overview",
                "Injecting Literal Values - Write Some Code",
                "FAQ: Why do we use CricketCoach class instead of Coach Interface?",
                "Injecting Values from a Properties File - Overview",
                "Injecting Values from a Properties File - Write Some Code",
                "Practice Activity #2 - Dependency Injection with XML Configuration"
            ]
        },
        {
            "sectionName": "Spring Bean Scopes and Lifecycle",
            "unitNames": [
                "Bean Scopes - Overview",
                "Bean Scopes - Write Some Code - Part 1",
                "Bean Scopes - Write Some Code - Part 2",
                "Bean Lifecycle - Overview",
                "Special Note: Defining init and destroy methods - Method Signatures",
                "Bean Lifecycle - Write Some Code",
                "Special Note about Destroy Lifecycle and Prototype Scope",
                "Practice Activity #3 - Bean Scopes with XML Configuration"
            ]
        },
        {
            "sectionName": "Spring Configuration with Java Annotations - Inversion of Control",
            "unitNames": [
                "Annotations Overview - Component Scanning",
                "Annotations Project Setup",
                "Explicit Component Names - Write Some Code - Part 1",
                "Explicit Component Names - Write Some Code - Part 2",
                "Default Component Names - Overview",
                "Default Component Names - Write Some Code",
                "Practice Activity #4 - Inversion of Control with Annotations"
            ]
        },
        {
            "sectionName": "Spring Configuration with Java Annotations - Dependency Injection",
            "unitNames": [
                "Constructor Injection - Overview",
                "Autowiring FAQ: What if there are Multiple Implementations?",
                "Constructor Injection - Write Some Code - Part 1",
                "Constructor Injection - Write Some Code - Part 2",
                "FAQ: Constructor Injection - Autowired Optional?",
                "Setter Injection - Overview",
                "Setter Injection - Write Some Code",
                "Method Injection",
                "Field Injection - Overview",
                "Field Injection - Write Some Code",
                "Which Injection Type Should You Use?",
                "Qualifiers for Dependency Injection - Overview",
                "Qualifiers for Dependency Injection - Write Some Code - Part 1",
                "Qualifiers for Dependency Injection - Write Some Code - Part 2",
                "Annotations - Default Bean Names - The Special Case",
                "Using @Qualifier with Constructors",
                "FAQ: How to inject properties file using Java annotations",
                "Practice Activity #5 - Dependency Injection with Annotations"
            ]
        },
        {
            "sectionName": "Spring Configuration with Java Annotations - Bean Scopes and Lifecycle Methods",
            "unitNames": [
                "@Scope Annotation - Overview",
                "@Scope Annotation - Write Some Code",
                "Bean Lifecycle Method Annotations - Overview",
                "Special Note about @PostConstruct and @PreDestroy Method Signatures",
                "HEADS UP - FOR JAVA 9 USERS - @PostConstruct and @PreDestroy",
                "Bean Lifecycle Method Annotations - Write Some Code",
                "Special Note about Destroy Lifecycle and Prototype Scope",
                "Practice Activity #6 - Bean Scopes with Annotations"
            ]
        },
        {
            "sectionName": "Spring Configuration with Java Code (no xml)",
            "unitNames": [
                "Spring Configuration with Java Code (no xml) - Overview",
                "Spring Configuration with Java Code (no xml) - Write Some Code",
                "Heads Up - Add Logging Messages in Spring 5.1 - All Java Config Version",
                "Defining Spring Beans with Java Code (no xml) - Overview",
                "Defining Spring Beans with Java Code (no xml) - Write Some Code - Part 1",
                "Defining Spring Beans with Java Code (no xml) - Write Some Code - Part 2",
                "FAQ: How @Bean works behind the scenes",
                "FAQ: What is a real-time use case for @Bean?",
                "Injecting Values from Properties File - Overview",
                "Injecting Values from Properties File - Write Some Code - Part 1",
                "Injecting Values from Properties File - Write Some Code - Part 2",
                "FAQ: Problems with Injecting Values - Value not returning from ${foo.email}",
                "Practice Activity #7 - IoC and DI with Java Configuration"
            ]
        },
        {
            "sectionName": "Spring MVC - Building Spring Web Apps",
            "unitNames": [
                "Spring MVC Overview",
                "Spring MVC - Behind the Scenes",
                "Development Environment Checkpoint",
                "Download Spring MVC Starter Files",
                "Spring MVC Configuration - Overview",
                "Spring MVC Configuration - JAR Files",
                "Spring MVC Configuration - Config Files",
                "FAQ: How to configure the Spring Dispatcher Servlet using all Java Code (no xml)"
            ]
        },
        {
            "sectionName": "Spring MVC - Creating Controllers and Views",
            "unitNames": [
                "Creating a Spring Home Controller and View - Overview",
                "Creating a Spring Home Controller and View - Write Some Code - Part 1",
                "Creating a Spring Home Controller and View - Write Some Code - Part 2",
                "FAQ: HELP! My Spring MVC Controller is not working. What to do?",
                "FAQ: HELP! - Can't Start Tomcat - Ports are in Use!",
                "FAQ: How Does Component Scan Work - Your Package Names are Different!",
                "Reading HTML Form Data - Overview",
                "Reading HTML Form Data - Write Some Code - Part 1",
                "Reading HTML Form Data - Write Some Code - Part 2",
                "Reading HTML Form Data - Write Some Code - Part 3",
                "Adding Data to the Spring Model - Overview",
                "Adding Data to the Spring Model - Write Some Code - Part 1",
                "Adding Data to the Spring Model - Write Some Code - Part 2",
                "FAQ: How to use CSS, JavaScript and Images in Spring MVC Web App",
                "Bonus: Deploying To Tomcat using WAR files"
            ]
        },
        {
            "sectionName": "Spring MVC - Request Params and Request Mappings",
            "unitNames": [
                "Binding Request Params - Overview",
                "Binding Request Params - Write Some Code",
                "Controller Level Request Mapping - Overview",
                "Controller Level Request Mapping - Write Some Code - Part 1",
                "Controller Level Request Mapping - Write Some Code - Part 2",
                "FAQ: How does \"processForm\" work for \"/hello\"?"
            ]
        },
        {
            "sectionName": "Spring MVC - Form Tags and Data Binding",
            "unitNames": [
                "Spring MVC Form Tags Overview",
                "Text Fields - Overview",
                "Text Fields - Write Some Code - Part 1",
                "Text Fields - Write Some Code - Part 2",
                "Text Fields - Write Some Code - Part 3",
                "Drop-Down Lists - Overview",
                "Drop-Down Lists - Write Some Code - Part 1",
                "Drop-Down Lists - Write Some Code - Part 2",
                "FAQ: Use properties file to load country options",
                "Radio Buttons - Overview",
                "Radio Buttons - Write Some Code",
                "FAQ: How to populate radiobuttons with items from Java class?",
                "Checkboxes - Overview",
                "Checkboxes - Write Some Code - Part 1",
                "Checkboxes - Write Some Code - Part 2"
            ]
        },
        {
            "sectionName": "Spring MVC Form Validation - Applying Built-In Validation Rules",
            "unitNames": [
                "Spring MVC Form Validation Overview",
                "Setting Up Dev Environment for Form Validation",
                "Installing Validation Files",
                "Checking for Required Fields Overview",
                "Special Note about BindingResult Parameter Order",
                "Add Validation Rule to Customer Class",
                "Display Validation Error Messages on HTML Form",
                "Perform Validation in Controller Class - Part 1",
                "Perform Validation in Controller Class - Part 2",
                "Update Confirmation Page",
                "Test the Validation Rule for Required Fields",
                "Add Pre-processing Code with @InitBinder - Overview",
                "Add Pre-processing Code with @InitBinder - Write Some Code"
            ]
        },
        {
            "sectionName": "Spring MVC Form Validation - Validating Number Ranges and Regular Expressions",
            "unitNames": [
                "Validating a Number Range - Overview",
                "Validating a Number Range - Write Some Code",
                "Applying Regular Expressions - Overview",
                "Applying Regular Expressions - Write Some Code",
                "How to make Integer Field Required: freePasses",
                "How to Handle String input for Integer Fields - Custom Message",
                "How to Handle String input for Integer Fields - Configure Resource Bundle",
                "How to Handle String input for Integer Fields - Deep Dive",
                "FAQ: How to make Integer field required and handle Strings: freePasses"
            ]
        },
        {
            "sectionName": "Spring MVC Form Validation - Creating Custom Validation Rules",
            "unitNames": [
                "Custom Form Validation - Overview - Part 1",
                "Custom Form Validation - Overview - Part 2",
                "Creating a Custom Java Annotation - Part 1",
                "Creating a Custom Java Annotation - Part 2",
                "Developing the ConstraintValidator",
                "Adding Validation Rule to the Entity and Form",
                "Testing the Custom Validation Rule",
                "FAQ: Spring MVC Custom Validation -  Possible to validate with multiple strings?"
            ]
        },
        {
            "sectionName": "Introduction to Hibernate",
            "unitNames": [
                "Hibernate Overview",
                "Hibernate and JDBC"
            ]
        },
        {
            "sectionName": "Setting Up Hibernate Development Environment",
            "unitNames": [
                "Hibernate 5.2 Requires Java 8",
                "Hibernate Development Environment Overview",
                "Installing MySQL on MS Windows",
                "Installing the MySQL Database on Mac",
                "Setting Up Database Table",
                "Setting up Hibernate in Eclipse",
                "Testing Your JDBC Connection"
            ]
        },
        {
            "sectionName": "Hibernate Configuration with Annotations",
            "unitNames": [
                "Hibernate Development Process Overview",
                "Creating the Hibernate Configuration File",
                "Hibernate Annotations - Part 1",
                "HEADS UP - FOR JAVA 9 USERS",
                "HEADS UP - JAVA 9 USERS - Eclipse Generate toString() fails",
                "Hibernate Annotations - Part 2",
                "FAQ: Why we are using JPA Annotation instead of Hibernate?",
                "FAQ: Can Hibernate generate database tables based on the Java code?"
            ]
        },
        {
            "sectionName": "Hibernate CRUD Features: Create, Read, Update and Delete",
            "unitNames": [
                "Creating and Saving Java Objects - Part 1",
                "Creating and Saving Java Objects - Part 2",
                "Primary Keys - Overview",
                "Primary Keys - Write Some Code",
                "Primary Keys - Changing the Starting Index",
                "Reading Objects with Hibernate",
                "Querying Objects with Hibernate - Overview",
                "Special Note about Deprecated Method in Hibernate 5.2",
                "Querying Objects with Hibernate - Write Some Code - Part 1",
                "Querying Objects with Hibernate - Write Some Code - Part 2",
                "FAQ: How To View Hibernate SQL Parameter Values",
                "Updating Objects with Hibernate - Overview",
                "Updating Objects with Hibernate - Write Some Code",
                "Deleting Objects with Hibernate - Overview",
                "Deleting Objects with Hibernate - Write Some Code",
                "Practice Activity #8 - Hibernate Development",
                "FAQ: How to read Dates with Hibernate"
            ]
        },
        {
            "sectionName": "Hibernate Advanced Mappings",
            "unitNames": [
                "Advanced Mappings Overview",
                "Database Concepts"
            ]
        },
        {
            "sectionName": "Hibernate Advanced Mappings - @OneToOne",
            "unitNames": [
                "@OneToOne - Overview - Part 1",
                "@OneToOne - Overview - Part 2",
                "@OneToOne - Overview - Part 3",
                "@OneToOne - Run Database Scripts",
                "@OneToOne - Write Some Code - Prep Work",
                "@OneToOne - Write Some Code - Create InstructorDetail class",
                "@OneToOne - Write Some Code - Create Instructor class",
                "@OneToOne - Write Some Code - Build Main App - Part 1",
                "@OneToOne - Write Some Code - Build Main App - Part 2",
                "@OneToOne - Delete an Entity",
                "@OneToOne - Bi-Directional Overview",
                "@OneToOne - Bi-Directional - Create Relationship",
                "@OneToOne - Bi-Directional - Develop Main App",
                "@OneToOne - Refactoring and Exception Handling",
                "@OneToOne - Bi-Directional - Cascade Delete",
                "@OneToOne - Bi-Directional - Delete Only InstructorDetail - Part 1",
                "@OneToOne - Bi-Directional - Delete Only InstructorDetail - Part 2"
            ]
        },
        {
            "sectionName": "Hibernate Advanced Mappings - @OneToMany",
            "unitNames": [
                "@OneToMany - Bi-Directional Overview - Part 1",
                "@OneToMany - Bi-Directional Overview - Part 2",
                "@OneToMany - Bi-Directional - Database Prep Work",
                "@OneToMany - Bi-Directional - Create Course Mapping",
                "@OneToMany - Bi-Directional - Define Course Relationship",
                "@OneToMany - Bi-Directional - Update Instructor",
                "@OneToMany - Bi-Directional - Add Instructor to Database",
                "@OneToMany - Bi-Directional - Create Courses for Instructor",
                "@OneToMany - Bi-Directional - Retrieve Instructor Courses",
                "@OneToMany - Bi-Directional - Delete a Course"
            ]
        },
        {
            "sectionName": "Hibernate Advanced Mappings - Eager vs Lazy Loading",
            "unitNames": [
                "Eager vs Lazy Loading - Overview - Part 1",
                "Eager vs Lazy Loading - Overview - Part 2",
                "Eager vs Lazy Loading - Coding - Eager",
                "Eager vs Lazy Loading - Coding - Lazy",
                "Eager vs Lazy Loading - Coding - Closing the Session",
                "Eager vs Lazy Loading - Coding - Resolve Lazy Loading Issue",
                "Eager vs Lazy Loading - Coding - HQL JOIN FETCH",
                "FAQ: How to load the courses at a later time in the application?"
            ]
        },
        {
            "sectionName": "Hibernate Advanced Mappings - @OneToMany - Unidirectional",
            "unitNames": [
                "@OneToMany - Uni-Directional - Overview - Part 1",
                "@OneToMany - Uni-Directional - Overview - Part 2",
                "FAQ: @JoinColumn ... where does it find the column?",
                "@OneToMany - Uni-Directional - Set up database tables",
                "@OneToMany - Uni-Directional - Create Review Class",
                "@OneToMany - Uni-Directional - Configure Fetch Type",
                "@OneToMany - Uni-Directional - Create Course Reviews",
                "@OneToMany - Uni-Directional - Get Course Reviews",
                "@OneToMany - Uni-Directional - Delete Course Reviews"
            ]
        },
        {
            "sectionName": "Hibernate Advanced Mappings - @ManyToMany",
            "unitNames": [
                "@ManyToMany - Overview - Part 1",
                "@ManyToMany - Overview - Part 2",
                "@ManyToMany - Set up database tables",
                "@ManyToMany - Update Course class",
                "@ManyToMany - Configure Course for many-to-many",
                "@ManyToMany - Configure Student for many-to-many",
                "@ManyToMany - Create a Main App",
                "@ManyToMany - Review app output",
                "@ManyToMany - Add more courses for a student",
                "@ManyToMany - Verify Data in Join Table",
                "@ManyToMany - Get Courses for Student",
                "@ManyToMany - Delete a Course",
                "@ManyToMany - Delete a Student"
            ]
        },
        {
            "sectionName": "Build a Database Web App - Spring MVC and Hibernate Project - Part 1",
            "unitNames": [
                "Project Overview and Demo",
                "Source Files for Spring MVC + Hibernate Web App",
                "Set up Sample Data for Database",
                "Test Database Connection - Part 1",
                "Test Database Connection - Part 2",
                "Set Up Dev Environment - Part 1",
                "HEADS UP - FOR JAVA 9 and higher USERS - Spring MVC CRUD",
                "Set Up Dev Environment - Part 2",
                "Set Up Dev Environment - Part 3",
                "Test Spring MVC Controller - Part 1",
                "Test Spring MVC Controller - Part 2"
            ]
        },
        {
            "sectionName": "Build a Database Web App - Spring MVC and Hibernate Project - Part 2",
            "unitNames": [
                "List Customers - Overview",
                "List Customers - Overview of Development Process",
                "List Customers - Creating Hibernate Entity - Part 1",
                "List Customers - Creating Hibernate Entity - Part 2",
                "List Customers - Developing Hibernate DAO - Overview - Part 1",
                "List Customers - Developing Hibernate DAO - Overview - Part 2",
                "List Customers - Developing Hibernate DAO - Write Some Code - Part 1",
                "List Customers - Developing Hibernate DAO - Write Some Code - Part 2",
                "List Customers - Injecting DAO into Controller",
                "List Customers - Developing JSP View Page",
                "Making it Pretty with CSS - Overview",
                "Making it Pretty with CSS - Write Some Code - Part 1",
                "Making it Pretty with CSS - Write Some Code - Part 2",
                "Adding a Welcome File"
            ]
        },
        {
            "sectionName": "Build a Database Web App - Spring MVC and Hibernate Project - Part 3",
            "unitNames": [
                "Refactor: @GetMapping and @PostMapping - Overview",
                "Refactor: @GetMapping and @PostMapping - Write Some Code",
                "Refactor: Add a Service Layer - Overview",
                "Refactor: Add a Service Layer - Write Some Code - Part 1",
                "Refactor: Add a Service Layer - Write Some Code - Part 2",
                "FAQ: Why So Many Layers? Service Layer etc ...",
                "FAQ: Can you show example of Service calling Multiple DAOs?"
            ]
        },
        {
            "sectionName": "Build a Database Web App - Spring MVC and Hibernate Project - Part 4",
            "unitNames": [
                "Add Customer - Overview",
                "Add Customer - Setting up the Add Button - Part 1",
                "Add Customer - Setting up the Add Button - Part 2",
                "Add Customer - Creating the HTML Form - Part 1",
                "Add Customer - Creating the HTML Form - Part 2",
                "Add Customer - Creating the HTML Form - Part 3",
                "Add Customer - Save to Database - Part 1",
                "Add Customer - Save to Database - Part 2",
                "Sort Customer Data"
            ]
        },
        {
            "sectionName": "Build a Database Web App - Spring MVC and Hibernate Project - Part 5",
            "unitNames": [
                "Update Customer - Overview",
                "Update Customer - Creating Update Link",
                "Update Customer - Prepopulating the Form - Part 1",
                "Update Customer - Prepopulating the Form - Part 2",
                "Update Customer - Prepopulating the Form - Part 3",
                "Update Customer - Save Customer to Database - Part 1",
                "Update Customer - Save Customer to Database - Part 2"
            ]
        },
        {
            "sectionName": "Build a Database Web App - Spring MVC and Hibernate Project - Part 6",
            "unitNames": [
                "Delete Customer - Overview",
                "Delete Customer - Creating Delete Link - Part 1",
                "Delete Customer - Creating Delete Link - Part 2",
                "Delete Customer - Delete from Database - Part 1",
                "Delete Customer - Delete from Database - Part 2",
                "Delete Customer - Delete from Database - Part 3",
                "FAQ: How to Add Search support",
                "FAQ: How to use customer-tracker project with All Java Configuration and Maven"
            ]
        },
        {
            "sectionName": "AOP: Aspect-Oriented Programming Overview",
            "unitNames": [
                "AOP - The Business Problem",
                "AOP Solution and AOP Use Cases",
                "Comparing Spring AOP and AspectJ"
            ]
        },
        {
            "sectionName": "AOP: @Before Advice Type",
            "unitNames": [
                "AOP: @Before Advice Overview",
                "AOP: AOP Project Setup",
                "AOP: @Before Advice - Write Some Code",
                "AOP: @Before Advice - Add and Test AOP Aspect"
            ]
        },
        {
            "sectionName": "AOP: Pointcut Expressions - Match Methods and Return Types",
            "unitNames": [
                "AOP - Pointcut Expressions Overview",
                "AOP - Pointcut Expressions - Match any addAccount Method - Part 2",
                "AOP - Pointcut Expressions - Match only DAO addAccount - Match any add* Method",
                "AOP - Pointcut Expressions - Match any Return Type"
            ]
        },
        {
            "sectionName": "AOP: Pointcut Expressions - Match Method Parameter Types",
            "unitNames": [
                "AOP: Pointcut Expressions - Match Method Parameter Types Overview",
                "AOP: Pointcut Expressions - Match Method with Account and more Params",
                "AOP: Pointcut Expressions - Match Method Any Params - Match Method in a Package"
            ]
        },
        {
            "sectionName": "AOP: Pointcut Declarations",
            "unitNames": [
                "AOP: Pointcut Declarations - Overview",
                "AOP: Pointcut Declarations - Write Some Code",
                "AOP: Combining Pointcuts - Overview",
                "AOP: Combining Pointcuts - Write Some Code - Part 1",
                "AOP: Combining Pointcuts - Write Some Code - Part 2"
            ]
        },
        {
            "sectionName": "AOP: Ordering Aspects",
            "unitNames": [
                "AOP: Ordering Aspects - Overview",
                "AOP: Ordering Aspects - Write Some Code - Part 1",
                "AOP: Ordering Aspects - Write Some Code - Part 2"
            ]
        },
        {
            "sectionName": "AOP: JoinPoints",
            "unitNames": [
                "AOP: Read Method Arguments with JoinPoints - Overview",
                "AOP: Read Method Arguments with JoinPoints - Write Some Code"
            ]
        },
        {
            "sectionName": "AOP: @AfterReturning Advice Type",
            "unitNames": [
                "AOP: @AfterReturning Overview",
                "AOP: @AfterReturning - Write Some Code - Part 1",
                "AOP: @AfterReturning - Write Some Code - Part 2",
                "AOP: @AfterReturning - Write Some Code - Part 3",
                "AOP: @AfterReturning - Modifying Data - Write Some Code"
            ]
        },
        {
            "sectionName": "AOP: @AfterThrowing Advice Type",
            "unitNames": [
                "AOP: @AfterThrowing",
                "AOP: @AfterThrowing - Write Some Code"
            ]
        },
        {
            "sectionName": "AOP: @After Advice Type",
            "unitNames": [
                "AOP: @After Overview",
                "AOP: @After - Write Some Code",
                "HEADS UP - @After Advice running after @AfterThrowing advice"
            ]
        },
        {
            "sectionName": "AOP: @Around Advice Type",
            "unitNames": [
                "AOP: @Around Advice Overview",
                "AOP: @Around - Write Some Code - Part 1",
                "AOP: @Around - Write Some Code - Part 2",
                "AOP: @Around Advice - Resolve Order Issue",
                "AOP: @Around Advice - Handling Exceptions - Overview",
                "AOP: @Around Advice - Handling Exceptions - Write Some Code",
                "AOP: @Around Advice - Rethrowing Exceptions"
            ]
        },
        {
            "sectionName": "AOP: Add AOP Logging to Spring MVC App - Real-Time Project",
            "unitNames": [
                "AOP: AOP and Spring MVC App - Overview",
                "AOP: AOP and Spring MVC App - Write Some Code - Create Aspect",
                "AOP: AOP and Spring MVC App - Write Some Code - Add @Before Advice",
                "AOP: AOP and Spring MVC App - Write Some Code - Add @AfterReturning Advice"
            ]
        },
        {
            "sectionName": "Maven Crash Course",
            "unitNames": [
                "Maven Overview - Part 1",
                "Maven Overview - Part 2",
                "Maven Key Concepts - POM file and Coordinates",
                "Maven - How to Find Dependencies",
                "Maven Archetypes",
                "Maven - Creating a Simple Project - Part 1",
                "How to Install the m2eclipse Plugin",
                "Maven - Creating a Simple Project - Part 2",
                "Maven - Creating a Web App Project",
                "Maven - Repositories Overview",
                "Maven - Local Repository",
                "Maven - Central Repository (remote)",
                "Maven - Private Repositories"
            ]
        },
        {
            "sectionName": "Spring Security - Getting Started",
            "unitNames": [
                "Spring Security - Overview",
                "Spring Security - Demo",
                "Spring Security - All Java Configuration - Part 1",
                "Spring Security - All Java Configuration - Part 2",
                "Spring Security - Project Downloads and Setup",
                "Spring Security - Maven Configuration",
                "FAQ: Maven can't find a class but I have it in pom.xml",
                "Spring Security - Create Spring Java Config class",
                "Spring Security - Create Spring Initializer class",
                "Spring Security - Create Controller and View",
                "Spring Security - Run the App",
                "Spring Security - Add Spring Security Maven Dependencies",
                "Spring Security - Latest Version",
                "Spring Security - Add Spring Security Maven Dependencies - Demo",
                "Spring Security - Basic Security (Users, Passwords and Roles)",
                "Spring Security - Create Security Initializer",
                "HEADS UP - New Spring Security 5.0.2  - Deprecated method",
                "Spring Security - Create Security Config"
            ]
        },
        {
            "sectionName": "Spring Security - Adding Custom Login Form",
            "unitNames": [
                "Spring Security - Rename Context Roots",
                "Spring Security - Dev and Testing with New Private Window",
                "Spring Security - Custom Login Form Overview - Part 1",
                "Spring Security - Custom Login Form Overview - Part 2",
                "Spring Security - Spring Config for Custom Login Form",
                "Spring Security - Create Request Mapping for Login Form",
                "Spring Security - Building Custom Login Form",
                "Spring Security - Testing Custom Login Form",
                "Spring Security - Adding Login Error Message - Overview",
                "Spring Security - Adding Login Error Message - Coding"
            ]
        },
        {
            "sectionName": "Spring Security - Bootstrap CSS Login Form",
            "unitNames": [
                "Spring Security - Bootstrap CSS Login Form",
                "Spring Security - Bootstrap CSS Login Form - Adding Form",
                "Spring Security - Bootstrap CSS Login Form - Customizing Form",
                "Spring Security - Bootstrap CSS Login Form - Testing",
                "FAQ: How To Add Local CSS file for Spring Security Login Form?"
            ]
        },
        {
            "sectionName": "Spring Security - Adding Logout Support",
            "unitNames": [
                "Spring Security - Logout Overview",
                "Spring Security - Logout Configuration",
                "Spring Security - Customizing Logout Message"
            ]
        },
        {
            "sectionName": "Spring Security - Cross Site Request Forgery (CSRF)",
            "unitNames": [
                "Spring Security - Cross Site Request Forgery (CSRF)",
                "Spring Security - Viewing CSRF Tokens",
                "Spring Security - Manually Adding CSRF Tokens"
            ]
        },
        {
            "sectionName": "Spring Security - User Roles",
            "unitNames": [
                "Spring Security - Displaying User ID and Roles - Overview",
                "Spring Security - Displaying User ID and Roles - Write Some Code",
                "Spring Security - Displaying User ID and Roles - Test the App"
            ]
        },
        {
            "sectionName": "Spring Security - Restrict Access Based on Role",
            "unitNames": [
                "Spring Security - Restrict Access - Overview",
                "Spring Security - Restrict Access - Update Home Page",
                "Spring Security - Restrict Access - Create Controller and Views",
                "Spring Security - Restrict Access - Security Configuration",
                "Spring Security - Restrict Access - Test Admin Access",
                "Spring Security - Create a Custom \"Access Denied\" Page - Overview",
                "Spring Security - Create a Custom \"Access Denied\" Page - Configuration",
                "Spring Security - Create a Custom \"Access Denied\" Page - Coding",
                "Spring Security - Display Content based on Roles - Overview",
                "Spring Security - Display Content based on Roles - Write Some Code",
                "Spring Security - Display Content based on Roles - Testing"
            ]
        },
        {
            "sectionName": "Spring Security - Add JDBC Database Authentication",
            "unitNames": [
                "Spring Security JDBC - Overview - Defining Database Schema",
                "Spring Security JDBC - Overview - DataSource Configuration",
                "Spring Security JDBC - Overview - Add JDBC Authentication",
                "Spring Security JDBC - Coding - Run SQL Script",
                "Spring Security JDBC - Coding - Update Maven POM File",
                "Spring Security JDBC - Coding - Add JDBC Properties File",
                "Spring Security JDBC - Coding - Define DataSource",
                "Spring Security JDBC - Coding - Reading Props File",
                "Spring Security JDBC - Coding - Configure Data Source",
                "Spring Security JDBC - Coding - Add JDBC Authentication",
                "Spring Security JDBC - Coding - Test the App"
            ]
        },
        {
            "sectionName": "Spring Security - Password Encryption",
            "unitNames": [
                "Spring Security - Password Encryption - Bcrypt Overview",
                "bcrypt Additional Resources",
                "Spring Security - Password Encryption - Spring Configuration",
                "Spring Security - Password Encryption - Setting up Database Schema",
                "Spring Security - Password Encryption - Bcrypt Configuration",
                "Spring Security - Password Encryption - Testing Passwords",
                "Bonus Lecture: Spring Security - Custom Tables and User Registration",
                "Bonus Lecture: Adding Spring Security to CRM App",
                "Bonus Lecture: Spring Security - Adding a Public Landing Page"
            ]
        },
        {
            "sectionName": "Spring REST - Overview",
            "unitNames": [
                "Spring REST - What are REST Web Services? - Part 1",
                "Spring REST - What are REST Web Services? - Part 2"
            ]
        },
        {
            "sectionName": "Spring REST - JSON Data Binding",
            "unitNames": [
                "Spring REST - JSON Overview",
                "Spring REST - JSON Data Binding with Jackson - Overview 1",
                "Spring REST - JSON Data Binding with Jackson - Overview 2",
                "Spring REST - JSON Jackson Demo - Set Up Maven Project",
                "Spring REST - JSON Jackson Demo - Processing JSON",
                "Spring REST - JSON Jackson Demo - Nested Objects and Arrays",
                "Spring REST - JSON Jackson Demo - Display Nested and Arrays",
                "Spring REST - JSON Jackson Demo - Ignore Properties"
            ]
        },
        {
            "sectionName": "Spring REST - Create a Spring REST Controller",
            "unitNames": [
                "Spring REST - HTTP Overview",
                "Spring REST - Install a REST Client",
                "Spring REST - Creating a Spring REST Controller - Overview 1",
                "Spring REST - Creating a Spring REST Controller - Overview 2",
                "Spring REST - REST Controller Demo - Set Up Maven Project",
                "Spring REST - REST Controller Demo - Set Up All Java Configuration",
                "Spring REST - REST Controller Demo - Creating the REST Controller",
                "Spring REST - App Enhancement with Default Page"
            ]
        },
        {
            "sectionName": "Spring REST - Retrieve POJOs as JSON",
            "unitNames": [
                "Spring REST - Retrieve POJOs as JSON - Overview",
                "Spring REST - Retrieve POJOs as JSON - Create POJO",
                "Spring REST - Retrieve POJOs as JSON - Create REST Controller",
                "Spring REST - Retrieve POJOs as JSON - Test REST Controller"
            ]
        },
        {
            "sectionName": "Spring REST - Using @PathVariable for REST Endpoints",
            "unitNames": [
                "Spring REST - Using @PathVariable for REST Endpoints - Overview",
                "Spring REST - Using @PathVariable for REST Endpoints - Refactoring Code",
                "Spring REST - Using @PathVariable for REST Endpoints - Coding @PathVariable"
            ]
        },
        {
            "sectionName": "Spring REST - Exception Handling",
            "unitNames": [
                "Spring REST - Exception Handling Overview - Part 1",
                "Spring REST - Exception Handling Overview - Part 2",
                "Spring REST - Exception Handling - Create Custom Error Response and Exception",
                "Spring REST - Exception Handling - Update REST Service to throw Exception",
                "Spring REST - Exception Handling - Add Exception Handler with @ExceptionHandler",
                "Spring REST - Exception Handling - Test the App",
                "Spring REST - Exception Handling - Adding Generic Exception Handler",
                "Spring REST - Global Exception Handling Overview",
                "Spring REST  - Global Exception Handling with @ControllerAdvice"
            ]
        },
        {
            "sectionName": "Spring REST - API Design Best Practices",
            "unitNames": [
                "Spring REST - API Design Best Practices",
                "Spring REST - API Design of Real-Time Projects (PayPal, Github and SalesForce)"
            ]
        },
        {
            "sectionName": "Spring REST - CRUD Database Real-Time Project - Overview",
            "unitNames": [
                "Spring REST - CRUD Database Real-Time Project - Overview",
                "Spring REST - Import Maven Project",
                "Spring REST - Maven POM file and All Java Config (no xml)",
                "Spring REST - Project Service and DAO",
                "Spring REST - Create Database Tables"
            ]
        },
        {
            "sectionName": "Spring REST - CRUD Database Real-Time Project - Get Customers",
            "unitNames": [
                "Spring REST - CRUD Database Real-Time Project - Get Customers Overview",
                "Spring REST - CRUD Database Real-Time Project - Create REST Controller",
                "Spring REST - CRUD Database Real-Time Project - Testing in Postman",
                "Spring REST - CRUD Database Real-Time Project - Get Single Customer Overview",
                "Spring REST - CRUD Database Real-Time Project - Get Single Customer - Testing"
            ]
        },
        {
            "sectionName": "Spring REST - CRUD Database Real-Time Project - Exception Handling",
            "unitNames": [
                "Spring REST - CRUD Database Real-Time Project - Exception Handling - Responses",
                "Spring REST - CRUD Database Real-Time Project - Exception Handling - Refactor",
                "Spring REST - CRUD Database Real-Time Project - Exception Handling - Annotation",
                "Spring REST - CRUD Database Real-Time Project - Exception Handling - Catch All"
            ]
        },
        {
            "sectionName": "Spring REST - CRUD Database Real-Time Project - Add Customer",
            "unitNames": [
                "Spring REST - CRUD Database Real-Time Project - Add Customer - Overview",
                "Spring REST - CRUD Database Real-Time Project - Add Customer - Coding",
                "Spring REST - CRUD Database Real-Time Project - Add Customer - Testing"
            ]
        },
        {
            "sectionName": "Spring REST - CRUD Database Real-Time Project - Update Customer",
            "unitNames": [
                "Spring REST - CRUD Database Real-Time Project - Update Customer - Overview",
                "Spring REST - CRUD Database Real-Time Project - Update Customer - Coding"
            ]
        },
        {
            "sectionName": "Spring REST - CRUD Database Real-Time Project - Delete Customer",
            "unitNames": [
                "Spring REST - CRUD Database Real-Time Project - Delete Customer - Overview",
                "Spring REST - CRUD Database Real-Time Project - Delete Customer - Coding",
                "Spring REST - CRUD Database Real-Time Project - Delete Customer - Testing"
            ]
        },
        {
            "sectionName": "Spring REST - Bonus Lectures",
            "unitNames": [
                "Bonus Lecture: Creating a REST Client with Spring",
                "Bonus Lecture: Securing REST API Endpoints"
            ]
        },
        {
            "sectionName": "Spring Boot - Overview",
            "unitNames": [
                "Spring Boot - What is Spring Boot?",
                "Spring Boot - Creating a Project with Spring Boot Initializr",
                "Spring Boot - Developing a REST API Controller with Spring Boot",
                "Spring Boot - Exploring the Spring Boot Project Structure - Part 1",
                "Spring Boot - Exploring the Spring Boot Project Structure - Part 2",
                "Spring Boot - Spring Boot Starters - A Curated List of Dependencies",
                "Spring Boot - Parents for Spring Boot Starters"
            ]
        },
        {
            "sectionName": "Spring Boot - Spring Boot Dev Tools and Spring Boot Actuator",
            "unitNames": [
                "Spring Boot - Dev Tools",
                "Spring Boot - Spring Boot Actuator - Overview",
                "Spring Boot - Spring Boot Actuator - Accessing Actuator Endpoints",
                "Spring Boot - Spring Boot Actuator - Applying Security to Actuator Endpoints"
            ]
        },
        {
            "sectionName": "Spring Boot - Running Spring Boot Apps from the Command Line",
            "unitNames": [
                "Spring Boot - Running Spring Boot Apps from the Command Line - Overview",
                "Spring Boot - Running Spring Boot Apps from the Command Line - Coding"
            ]
        },
        {
            "sectionName": "Spring Boot - Application Properties",
            "unitNames": [
                "Spring Boot - Injecting Custom Application Properties",
                "Spring Boot - Configuring the Spring Boot Server"
            ]
        },
        {
            "sectionName": "Spring Boot - Build a REST CRUD API with Hibernate - Real-Time Project",
            "unitNames": [
                "Spring Boot - REST CRUD Real-Time Project Overview and Database Set Up",
                "Spring Boot - Create Project with Spring Initializr",
                "Spring Boot - Integrating Hibernate and JPA",
                "Spring Boot - Configuring the Spring Boot Data Source",
                "Spring Boot - Developing the DAO Interface and Implementation",
                "Spring Boot - Creating REST Controller Methods",
                "Spring Boot - Additional CRUD Methods for DAO",
                "Spring Boot - Refactoring the Code to use a Service Layer",
                "Spring Boot - REST Controller Methods to Find and Add Employee",
                "Spring Boot - REST Controller Methods to Update and Delete an Employee"
            ]
        },
        {
            "sectionName": "Spring Boot - Build a REST CRUD API with JPA - Real-Time Project",
            "unitNames": [
                "Spring Boot - REST JPA Overview",
                "Spring Boot - Creating JPA DAO Implementation for REST API",
                "Spring Boot - Testing the REST API with JPA DAO Implementation"
            ]
        },
        {
            "sectionName": "Spring Boot - Spring Data JPA - Real-Time Project",
            "unitNames": [
                "Spring Boot - Spring Data JPA Overview",
                "Spring Boot - Creating Spring Data JPA Repository",
                "Spring Boot - Testing the REST API with Spring Data JPA Repository"
            ]
        },
        {
            "sectionName": "Spring Boot - Spring Data REST - Real-Time Project",
            "unitNames": [
                "Spring Boot - Spring Data REST Overview",
                "Spring Boot - Spring Data REST - Creating a REST API",
                "Spring Boot - Spring Data REST - Configuration, Pagination and Sorting"
            ]
        },
        {
            "sectionName": "Spring Boot - Thymeleaf",
            "unitNames": [
                "Spring Boot - Thymeleaf Overview",
                "Spring Boot - Thymeleaf Helloworld - Create a Thymeleaf App",
                "Spring Boot - Thymeleaf Helloworld - Apply CSS Stylesheets"
            ]
        },
        {
            "sectionName": "Spring Boot - Thymeleaf - Build HTML Tables",
            "unitNames": [
                "Spring Boot - Thymeleaf - Build HTML Tables - Overview",
                "Spring Boot - Thymeleaf - Build HTML Tables - Write Some Code",
                "Spring Boot - Thymeleaf - Add Bootstrap CSS"
            ]
        },
        {
            "sectionName": "Spring Boot - Thymeleaf - CRUD Database Real-Time Project",
            "unitNames": [
                "Spring Boot - Thymeleaf - CRUD Database Project - Get Employees - Part 1",
                "Spring Boot - Thymeleaf - CRUD Database Project - Get Employees - Part 2",
                "Spring Boot - Thymeleaf - CRUD Database Real-Time Project: Add Employee - Part 1",
                "Spring Boot - Thymeleaf - CRUD Database Real-Time Project: Add Employee - Part 2",
                "Spring Boot - Thymeleaf - CRUD Database Real-Time Project: Add Employee - Part 3",
                "Spring Boot - Thymeleaf - CRUD Database Real-Time Project: Update Employee - 1",
                "Spring Boot - Thymeleaf - CRUD Database Real-Time Project: Update Employee - 2",
                "Spring Boot - Thymeleaf - CRUD Database Real-Time Project: Delete Employee"
            ]
        },
        {
            "sectionName": "Spring Boot - Thymeleaf - Security Bonus",
            "unitNames": [
                "Bonus Lecture - Security - Login/Logout with Spring Boot and Thymeleaf",
                "Bonus Lecture - Security - User Registration with Spring Boot and Thymeleaf"
            ]
        },
        {
            "sectionName": "Summary",
            "unitNames": [
                "Thank You and Please Leave a Rating for the Course",
                "Direct Links to My Java Courses"
            ]
        },
        {
            "sectionName": "Appendix",
            "unitNames": [
                "FAQ: Spring Student Questions",
                "FAQ: How to Configure Multiple Datasources in Spring and Spring Boot"
            ]
        },
        {
            "sectionName": "Bonus: Spring Boot Deployments on Tomcat",
            "unitNames": [
                "Deploying Spring Boot WAR file with JSP to Tomcat",
                "Deploy Spring Boot WAR file with Thymeleaf to Tomcat"
            ]
        }
    ]
}