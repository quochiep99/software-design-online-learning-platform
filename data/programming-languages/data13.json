{
    "field": {
        "name": "programming-languages",
        "courses": []
    },
    "course": {
        "title": "NodeJS - The Complete Guide (MVC, REST APIs, GraphQL, Deno)",
        "subtitle": "Master Node JS & Deno.js, build REST APIs with Node.js, GraphQL APIs, add Authentication, use MongoDB, SQL & much more!",
        "descriptions": [],
        "reviews": [],
        "students": [],
        "image1xURL": "https://img-a.udemycdn.com/course/240x135/1879018_95b6_3.jpg",
        "image2xURL": "https://img-a.udemycdn.com/course/480x270/1879018_95b6_3.jpg",
        "image3xURL": "https://img-a.udemycdn.com/course/750x422/1879018_95b6_3.jpg",
        "discountPrice": 11.99,
        "originalPrice": 129.99,
        "numViews": 0,
        "curriculum": []
    },
    "reviews": [
        {
            "body": "Si, il corso è fatto molto bene. Lo studente è seguito passo passo nella realizzazione di diversi progetti, e per ogni progetto vengono insegnati diverse tecnologie per giungere al medesimo risultato. Un corso davvero consigliato per chi vuole imparare nodejs !!",
            "rating": 5
        },
        {
            "body": "I'm writing this review after completing the course (except typescript and Deno which are just extra contents). Max is a really great teacher when it comes to explaining concepts. His knowledge on Node.js is exceptional. I'm only taking 0.5 stars because some of the videos haven't been updated but they're just a minor inconvenience. The core concepts are explained really well. I would definitely recommend this course to anyone who's willing to start learning Node.js.",
            "rating": 4.5
        },
        {
            "body": "The experience was amazing. Really gained a handful of skills by the end of the course. The course does introduce advanced concepts and dives deeper into some thus improving my skillset on completion. Thanks Max and Adam for the responses and fixes suggested on my posted questions. All in all a very good learning experience.",
            "rating": 5
        },
        {
            "body": "This was really awesome course, at start I haven't experience with backend at all and now I think I am able to build something on my own!",
            "rating": 5
        },
        {
            "body": "This is rare course on node which will teaches you to use server side rendering as well as client side.No SQLas well as SQL.GrpahQL\n\nFull package it is.",
            "rating": 5
        },
        {
            "body": "Really amazing course. Tons of content, which is clear and easy to follow. I also really like that there is a lot of extra content that you wouldn't normally expect in a Node course that covers some useful third party tools, like the graphQL section or the payment section. This course really covers everything you will ever need to know about Node.",
            "rating": 5
        },
        {
            "body": "This was a fantastic course. So much material about not just node but supporting technologies as well. The instructor, Max, is a natural teacher and the lectures are engaging and well put together. I definitely plan to take some more of his courses.",
            "rating": 5
        },
        {
            "body": "Tons of content, the middle section feels a little out of scope (react, graphql) but you could watch half of the videos and still get more out of this course than you probably deserve.",
            "rating": 5
        },
        {
            "body": "As always a high quality course, excellent explanations and very detailed.\n\nIf I lower the score a little bit it's because some parts have become very outdated and it's hard to follow some points, some parts of the course are a bit confusing, like for example the part of the Databases, where you create them in one way and then instead of starting from 0 you delete part of the code and create the other type.\n\nStill a very recommended and very interesting course to get into Node.js",
            "rating": 4
        },
        {
            "body": "Instructor is quite good. The projects are well thought out.\n\nCourse will give you a much better comfort level with Node and npm. It will take quite a bit of time (as you can tell by the number of hours).",
            "rating": 4.5
        },
        {
            "body": "My First back-end course ever, after enrolling and completing Angular and React JS Course by Maxmillian, enrolled for Node JS course with even higher expectations from Maxmillian and he never fails to deliver. Fantastic course, not just blindly using new plugins and frameworks but he always explains the background process taking place in each of the core Frameworks like Express and Mongoose etc.\n\nLoved the part of building creating a brand new Project for the Rest API module alone. Also it helped to gain some knowledge on how to connect my React with Node Back-end. Worth of every single minute spent.\n\nThanks Maxmillian for creating such a wonderful course!! Happy Learning",
            "rating": 5
        },
        {
            "body": "Well I purchased this course on 24th June 2020 and completed this course on December 2020 and let me tell you that this course is just amazing and one of its kind because not only you are learning node.js but also building a big complex application. I struggled in the beginning of the course but as you follow along with Max you find it easy and also you can move forward without Max guiding you. Also the Q&A section is pretty responsive and many times the question I had was answered already in the Q&A section.\n\nIf you are looking to learn Node.js to become FullStack developer then go for this one it is the best one out there.",
            "rating": 5
        }
    ],
    "students": [
        {
            "name": "Tso79",
            "email": "tso79@gmail.com",
            "password": "tso79",
            "role": "s",
            "isConfirmed": true
        },
        {
            "name": "Nilanshu Vithal Rajmane",
            "email": "nilanshuvithalrajmane@gmail.com",
            "password": "nilanshuvithalrajmane",
            "role": "s",
            "isConfirmed": true
        },
        {
            "name": "Nimish Paranjape",
            "email": "nimishparanjape@gmail.com",
            "password": "nimishparanjape",
            "role": "s",
            "isConfirmed": true
        },
        {
            "name": "Miłosz Radzyński",
            "email": "miłoszradzyński@gmail.com",
            "password": "miłoszradzyński",
            "role": "s",
            "isConfirmed": true
        },
        {
            "name": "Ankit Kumar",
            "email": "ankitkumar@gmail.com",
            "password": "ankitkumar",
            "role": "s",
            "isConfirmed": true
        },
        {
            "name": "Lars Spangenberg",
            "email": "larsspangenberg@gmail.com",
            "password": "larsspangenberg",
            "role": "s",
            "isConfirmed": true
        },
        {
            "name": "Jay Pace",
            "email": "jaypace@gmail.com",
            "password": "jaypace",
            "role": "s",
            "isConfirmed": true
        },
        {
            "name": "Charles",
            "email": "charles@gmail.com",
            "password": "charles",
            "role": "s",
            "isConfirmed": true
        },
        {
            "name": "Enrique Javier Lopez Vallejo",
            "email": "enriquejavierlopezvallejo@gmail.com",
            "password": "enriquejavierlopezvallejo",
            "role": "s",
            "isConfirmed": true
        },
        {
            "name": "Dave Danner",
            "email": "davedanner@gmail.com",
            "password": "davedanner",
            "role": "s",
            "isConfirmed": true
        },
        {
            "name": "Prasanna Srinivasan V",
            "email": "prasannasrinivasanv@gmail.com",
            "password": "prasannasrinivasanv",
            "role": "s",
            "isConfirmed": true
        },
        {
            "name": "Dhrunit Prajapati",
            "email": "dhrunitprajapati@gmail.com",
            "password": "dhrunitprajapati",
            "role": "s",
            "isConfirmed": true
        }
    ],
    "instructor": {
        "name": "Academind by Maximilian Schwarzmüller",
        "email": "academindbymaximilianschwarzmüller@gmail.com",
        "password": "academindbymaximilianschwarzmüller",
        "role": "i",
        "briefIntroduction": "<p>Bundling the courses and know how of successful instructors, Academind strives to deliver high quality online education.&nbsp;</p>\n\n<p>Online Education, Real-Life Success - that's what Academind stands for. Learn topics like web development, data analyses and more in a fun and engaging way.</p>\n\n\n\n\n\n\n\n<p>Currently, you can find courses published by Maximilian Schwarzmüller and Manuel Lorenz, more instructors to come!</p>\n\n\n\n\n\n\n\n<p>Keep learning!</p>",
        "isConfirmed": true
    },
    "curriculum": [
        {
            "sectionName": "Introduction",
            "unitNames": [
                "Introduction",
                "What is Node.js?",
                "Join our Online Learning Community",
                "Installing Node.js and Creating our First App",
                "Understanding the Role & Usage of Node.js",
                "Course Outline",
                "How To Get The Most Out Of The Course",
                "Working with the REPL vs Using Files",
                "Using the Attached Source Code"
            ]
        },
        {
            "sectionName": "Optional: JavaScript - A Quick Refresher",
            "unitNames": [
                "Module Introduction",
                "JavaScript in a Nutshell",
                "Refreshing the Core Syntax",
                "let & const",
                "Understanding Arrow Functions",
                "Working with Objects, Properties & Methods",
                "Arrays & Array Methods",
                "Arrays, Objects & Reference Types",
                "Understanding Spread & Rest Operators",
                "Destructuring",
                "Async Code & Promises",
                "Template Literals",
                "Wrap Up",
                "Useful Resources & Links"
            ]
        },
        {
            "sectionName": "Understanding the Basics",
            "unitNames": [
                "Module Introduction",
                "How The Web Works",
                "Creating a Node Server",
                "The Node Lifecycle & Event Loop",
                "Controlling the Node.js Process",
                "Understanding Requests",
                "Sending Responses",
                "Request & Response Headers",
                "Routing Requests",
                "Redirecting Requests",
                "Parsing Request Bodies",
                "Understanding Event Driven Code Execution",
                "Blocking and Non-Blocking Code",
                "Node.js - Looking Behind the Scenes",
                "Using the Node Modules System",
                "Wrap Up",
                "Time to Practice - The Basics",
                "Useful Resources & Links"
            ]
        },
        {
            "sectionName": "Improved Development Workflow and Debugging",
            "unitNames": [
                "Module Introduction",
                "Understanding NPM Scripts",
                "Installing 3rd Party Packages",
                "Global Features vs Core Modules vs Third-Party Modules",
                "Using Nodemon for Autorestarts",
                "Global & Local npm Packages",
                "Understanding different Error Types",
                "Finding & Fixing Syntax Errors",
                "Dealing with Runtime Errors",
                "Logical Errors",
                "Using the Debugger",
                "Restarting the Debugger Automatically After Editing our App",
                "Debugging Node.js in Visual Studio Code",
                "Changing Variables in the Debug Console",
                "Wrap Up",
                "Useful Resources & Links"
            ]
        },
        {
            "sectionName": "Working with Express.js",
            "unitNames": [
                "Module Introduction",
                "What is Express.js?",
                "Installing Express.js",
                "Adding Middleware",
                "How Middleware Works",
                "Express.js - Looking Behind the Scenes",
                "Handling Different Routes",
                "Time to Practice - Express.js",
                "Parsing Incoming Requests",
                "Limiting Middleware Execution to POST Requests",
                "Using Express Router",
                "Adding a 404 Error Page",
                "Filtering Paths",
                "Creating HTML Pages",
                "Serving HTML Pages",
                "Returning a 404 Page",
                "Using a Helper Function for Navigation",
                "Styling our Pages",
                "Serving Files Statically",
                "Time to Practice - Navigation",
                "Wrap Up",
                "Useful Resources & Links"
            ]
        },
        {
            "sectionName": "Working with Dynamic Content & Adding Templating Engines",
            "unitNames": [
                "Module Introduction",
                "Sharing Data Across Requests & Users",
                "Templating Engines - An Overview",
                "Installing & Implementing Pug",
                "Outputting Dynamic Content",
                "Official Pug Docs",
                "Converting HTML Files to Pug",
                "Adding a Layout",
                "Finishing the Pug Template",
                "Avoiding an Error",
                "Working with Handlebars",
                "Converting our Project to Handlebars",
                "Adding the Layout to Handlebars",
                "Working with EJS",
                "Working on the Layout with Partials",
                "Wrap Up",
                "Time to Practice - Templating Engines",
                "[OPTIONAL] Assignment Solution",
                "Useful Resources & Links"
            ]
        },
        {
            "sectionName": "The Model View Controller (MVC)",
            "unitNames": [
                "Module Introduction",
                "What is the MVC?",
                "Adding Controllers",
                "Finishing the Controllers",
                "Adding a Product Model",
                "Storing Data in Files Via the Model",
                "Fetching Data from Files Via the Model",
                "Refactoring the File Storage Code",
                "Wrap Up",
                "Useful Resources & Links"
            ]
        },
        {
            "sectionName": "Optional: Enhancing the App",
            "unitNames": [
                "Module Introduction",
                "Creating the Shop Structure",
                "Working on the Navigation",
                "Registering the Routes",
                "Storing Product Data",
                "Displaying Product Data",
                "Editing & Deleting Products",
                "Adding Another Item",
                "Useful Resources & Links"
            ]
        },
        {
            "sectionName": "Dynamic Routes & Advanced Models",
            "unitNames": [
                "Module Introduction",
                "Preparations",
                "Applied Changes",
                "Adding the Product ID to the Path",
                "Extracting Dynamic Params",
                "Loading Product Detail Data",
                "Rendering the Product Detail View",
                "Passing Data with POST Requests",
                "Adding a Cart Model",
                "Using Query Params",
                "Pre-Populating the Edit Product Page with Data",
                "Linking to the Edit Page",
                "Editing the Product Data",
                "Adding the Product-Delete Functionality",
                "Deleting Cart Items",
                "Displaying Cart Items on the Cart Page",
                "Deleting Cart Items",
                "Fixing a Delete Product Bug",
                "Wrap Up",
                "Useful Resources & Links"
            ]
        },
        {
            "sectionName": "SQL Introduction",
            "unitNames": [
                "Module Introduction",
                "Choosing a Database",
                "NoSQL Introduction",
                "Comparing SQL and NoSQL",
                "Setting Up MySQL",
                "Connecting our App to the SQL Database",
                "Basic SQL & Creating a Table",
                "Retrieving Data",
                "Fetching Products",
                "Fetching Products - Time to Practice",
                "Inserting Data Into the Database",
                "Fetching a Single Product with the \"where\" Condition",
                "Wrap Up",
                "Useful Resources & Links"
            ]
        },
        {
            "sectionName": "Understanding Sequelize",
            "unitNames": [
                "Module Introduction",
                "What is Sequelize?",
                "Connecting to the Database",
                "Defining a Model",
                "Syncing JS Definitions to the Database",
                "Inserting Data & Creating a Product",
                "MUST READ: findById() in Sequelize 5",
                "Retrieving Data & Finding Products",
                "Getting a Single Product with the \"where\" Condition",
                "Fetching Admin Products",
                "Updating Products",
                "Deleting Products",
                "Creating a User Model",
                "Adding a One-To-Many Relationship",
                "Creating & Managing a Dummy User",
                "Using Magic Association Methods",
                "Fetching Related Products",
                "One-To-Many & Many-To-Many Relations",
                "Creating & Fetching a Cart",
                "Adding New Products to the Cart",
                "Adding Existing Products & Retrieving Cart Items",
                "Deleting Related Items & Deleting Cart Products",
                "Adding an Order Model",
                "Storing Cartitems as Orderitems",
                "Resetting the Cart & Fetching and Outputting Orders",
                "Wrap Up",
                "Useful Resources & Links"
            ]
        },
        {
            "sectionName": "Working with NoSQL & Using MongoDB",
            "unitNames": [
                "Module Introduction",
                "What is MongoDB?",
                "Relations in NoSQL",
                "Setting Up MongoDB",
                "Installing the MongoDB Driver",
                "Creating the Database Connection",
                "Finishing the Database Connection",
                "Using the Database Connection",
                "Creating Products",
                "Understanding the MongoDB Compass",
                "Fetching All Products",
                "Fetching a Single Product",
                "Making the \"Edit\" & \"Delete\" Buttons Work Again",
                "Working on the Product Model to Edit our Product",
                "Finishing the \"Update Product\" Code",
                "One Note About Updating Products",
                "Deleting Products",
                "Fixing the \"Add Product\" Functionality",
                "Creating New Users",
                "Storing the User in our Database",
                "Working on Cart Items & Orders",
                "Adding the \"Add to Cart\" Functionality",
                "Storing Multiple Products in the Cart",
                "Displaying the Cart Items",
                "Fixing a Bug",
                "Deleting Cart Items",
                "Adding an Order",
                "Adding Relational Order Data",
                "Getting Orders",
                "Removing Deleted Items From the Cart",
                "Wrap Up",
                "Useful Resources & Links",
                "Two Adjustments (behind the scenes)"
            ]
        },
        {
            "sectionName": "Working with Mongoose",
            "unitNames": [
                "Module Introduction",
                "What is Mongoose?",
                "Connecting to the MongoDB Server with Mongoose",
                "Creating the Product Schema",
                "Saving Data Through Mongoose",
                "Fetching All Products",
                "Fetching a Single Product",
                "Updating Products",
                "Deleting Products",
                "Adding and Using a User Model",
                "Using Relations in Mongoose",
                "One Important Thing About Fetching Relations",
                "Working on the Shopping Cart",
                "Loading the Cart",
                "Deleting Cart Items",
                "Creating & Getting Orders",
                "Storing All Order Related Data",
                "Clearing the Cart After Storing an Order",
                "Getting & Displaying the Orders",
                "Wrap Up",
                "Useful Resources & Links"
            ]
        },
        {
            "sectionName": "Sessions & Cookies",
            "unitNames": [
                "Module Introduction",
                "What is a Cookie?",
                "The Current Project Status",
                "Optional: Creating the Login Form",
                "Adding the Request Driven Login Solution",
                "Setting a Cookie",
                "Manipulating Cookies",
                "Configuring Cookies",
                "What is a Session?",
                "Initializing the Session Middleware",
                "Using the Session Middleware",
                "Using MongoDB to Store Sessions",
                "Sessions & Cookies - A Short Summary",
                "Time to Practice - Sessions and Cookies",
                "Deleting a Cookie",
                "Fixing Some Minor Bugs",
                "Making \"Add to Cart\" Work Again",
                "Two Tiny Improvements",
                "Wrap Up",
                "Code Adjustments",
                "Useful Resources & Links"
            ]
        },
        {
            "sectionName": "Adding Authentication",
            "unitNames": [
                "Module Introduction",
                "What is Authentication?",
                "How is Authentication Implemented?",
                "Our Updated Project Status",
                "Implementing an Authentication Flow",
                "Encrypting Passwords",
                "Adding a Tiny Code Improvement",
                "Adding the Signin Functionality",
                "Working on Route Protection",
                "Using Middleware to Protect Routes",
                "Understanding CSRF Attacks",
                "Using a CSRF Token",
                "Adding CSRF Protection",
                "Fixing the Order Button",
                "Providing User Feedback",
                "Optional: Styling Error Messages",
                "Finishing the Flash Messages",
                "Adding Additional Flash Messages",
                "Wrap Up",
                "Useful Resources & Links"
            ]
        },
        {
            "sectionName": "Sending Emails",
            "unitNames": [
                "Module Introduction",
                "How Does Sending Emails Work?",
                "Using SendGrid",
                "Using Nodemailer to Send an Email",
                "Potential Limitation for Large Scale Apps",
                "Useful Resources & Links"
            ]
        },
        {
            "sectionName": "Advanced Authentication",
            "unitNames": [
                "Module Introduction",
                "Resetting Passwords",
                "Implementing the Token Logic",
                "Creating the Token",
                "Creating the Reset Password Form",
                "Adding Logic to Update the Password",
                "Why we Need Authorization",
                "Adding Authorization",
                "Adding Protection to Post Actions",
                "Why Editing Fails",
                "Wrap Up",
                "Useful Resources & Links"
            ]
        },
        {
            "sectionName": "Understanding Validation",
            "unitNames": [
                "Module Introduction",
                "Why Should We Use Validation?",
                "How to Validate Input?",
                "Setup & Basic Validation",
                "Using Validation Error Messages",
                "Built-In & Custom Validators",
                "More Validators",
                "Checking For Field Equality",
                "Adding Async Validation",
                "Time to Practice - Validation",
                "Keeping User Input",
                "Adding Conditional CSS Classes",
                "Adding Validation to Login",
                "Sanitizing Data",
                "Validating Product Addition",
                "Validating Product Editing",
                "Wrap Up",
                "Useful Resources & Links"
            ]
        },
        {
            "sectionName": "Error Handling",
            "unitNames": [
                "Module Introduction",
                "Types of Errors & Error Handling",
                "Analyzing the Error Handling in the Current Project",
                "Errors - Some Theory",
                "Throwing Errors in Code",
                "Returning Error Pages",
                "Using the Express.js Error Handling Middleware",
                "Updating the App",
                "Using the Error Handling Middleware Correctly",
                "Status Codes",
                "Available Status Codes",
                "Wrap Up",
                "Useful Resources & Links"
            ]
        },
        {
            "sectionName": "File Upload & Download",
            "unitNames": [
                "Module Introduction",
                "Adding a File Picker to the Frontend",
                "Handling Multipart Form Data",
                "Handling File Uploads with Multer",
                "Configuring Multer to Adjust Filename & Filepath",
                "Filtering Files by Mimetype",
                "Storing File Data in the Database",
                "Remove imageUrl from \"Add Product\"",
                "Serving Images Statically",
                "Downloading Files with Authentication",
                "Setting File Type Headers",
                "Restricting File Access",
                "Streaming Data vs Preloading Data",
                "Using PDFKit for .pdf Generation",
                "Generating .pdf Files with Order Data",
                "Deleting Files",
                "Fixing Invoice Links",
                "Wrap Up",
                "Useful Resources & Links"
            ]
        },
        {
            "sectionName": "Adding Pagination",
            "unitNames": [
                "Module Introduction",
                "Adding Pagination Links",
                "Retrieving a Chunk of Data",
                "Skip & Limit with SQL",
                "Preparing Pagination Data on the Server",
                "Adding Dynamic Pagination Buttons",
                "Re-Using the Pagination Logic & Controls",
                "Wrap Up",
                "Useful Resources & Links"
            ]
        },
        {
            "sectionName": "Understanding Async Requests",
            "unitNames": [
                "Module Introduction",
                "What are Async Requests?",
                "Adding Client Side JS Code",
                "The JSON Data Format",
                "Sending & Handling Background Requests",
                "Manipulating the DOM",
                "Useful Resources & Links"
            ]
        },
        {
            "sectionName": "Adding Payments",
            "unitNames": [
                "Module Introduction",
                "How Payments Work",
                "Adding a Checkout Page",
                "Using Stripe in Your App",
                "Useful Resources & Links"
            ]
        },
        {
            "sectionName": "Working with REST APIs - The Basics",
            "unitNames": [
                "Module Introduction",
                "What are REST APIs and why do we use Them?",
                "Accessing Data with REST APIs",
                "Understanding Routing & HTTP Methods",
                "REST APIs - The Core Principles",
                "Creating our REST API Project & Implementing the Route Setup",
                "Sending Requests & Responses and Working with Postman",
                "REST APIs, Clients & CORS Errors",
                "Sending POST Requests",
                "Wrap Up",
                "Useful Resources & Links"
            ]
        },
        {
            "sectionName": "Working with REST APIs - The Practical Application",
            "unitNames": [
                "Module Introduction",
                "REST APIs & The Rest Of The Course",
                "Understanding the Frontend Setup",
                "Planning the API",
                "Fetching Lists of Posts",
                "Adding a Create Post Endpoint",
                "Adding Server Side Validation",
                "Setting Up a Post Model",
                "Storing Posts in the Database",
                "Static Images & Error Handling",
                "Fetching a Single Post",
                "Image Names & Windows",
                "Uploading Images",
                "Updating Posts",
                "Deleting Posts",
                "Adding Pagination",
                "Adding a User Model",
                "Adding User Signup Validation",
                "Signing Users Up",
                "How Does Authentication Work?",
                "Starting with User Login",
                "Logging In & Creating JSON Web Tokens (JWTs)",
                "Using & Validating the Token",
                "Adding Auth Middleware to All Routes",
                "Connecting Posts & Users",
                "Adding Authorization Checks",
                "Clearing Post-User Relations",
                "Time to Practice - Working with REST APIs",
                "Wrap Up",
                "Useful Resources & Links"
            ]
        },
        {
            "sectionName": "Understanding Async Await in Node.js",
            "unitNames": [
                "Module Introduction",
                "What is Async Await All About?",
                "Transforming \"Then Catch\" to \"Async Await\"",
                "Top-level \"await\"",
                "Time to Practice - Async Await",
                "The User Name is Missing!",
                "Wrap Up",
                "Useful Resources & Links"
            ]
        },
        {
            "sectionName": "Understanding Websockets & Socket.io",
            "unitNames": [
                "Module Introduction",
                "What Are Websockets & Why Would You Use Them?",
                "Websocket Solutions - An Overview",
                "Setting Up Socket.io on the Server",
                "Establishing a Connection From the Client",
                "Identifying Realtime Potential",
                "Sharing the IO Instance Across Files",
                "Synchronizing POST Additions",
                "Fixing a Bug - The Missing Username",
                "Updating Posts On All Connected Clients",
                "Sorting Correctly",
                "Deleting Posts Across Clients",
                "Wrap Up",
                "Useful Resources & Links"
            ]
        },
        {
            "sectionName": "Working with GraphQL",
            "unitNames": [
                "Module Introduction",
                "What is GraphQL?",
                "Understanding the Setup & Writing our First Query",
                "Defining a Mutation Schema",
                "Adding a Mutation Resolver & GraphiQL",
                "Adding Input Validation",
                "Handling Errors",
                "Connecting the Frontend to the GraphQL API",
                "Adding a Login Query & a Resolver",
                "Adding Login Functionality",
                "Adding a Create Post Mutation",
                "Extracting User Data From the Auth Token",
                "Sending the \"Create Post\" Query",
                "Fixing a Bug & Adding New Posts Correctly",
                "Adding a \"Get Post\" Query & Resolver",
                "Sending \"Create Post\" and \"Get Post\" Queries",
                "Adding Pagination",
                "Uploading Images",
                "Fetching the imageUrl",
                "Viewing a Single Post",
                "Updating Posts",
                "Deleting Posts",
                "Adding Posts & Pagination",
                "Managing the User Status",
                "Using Variables",
                "Fixing a Pagination Bug",
                "Wrap Up",
                "Useful Resources & Links"
            ]
        },
        {
            "sectionName": "Deploying our App",
            "unitNames": [
                "Module Introduction",
                "Deploying Different Kinds of Apps",
                "Deployment Preparations",
                "Using Environment Variables",
                "Using Production API Keys",
                "Setting Secure Response Headers with Helmet",
                "Compressing Assets",
                "Setting Up Request Logging",
                "More on Logging",
                "Setting Up a SSL Server",
                "Using a Hosting Provider",
                "Understanding the Project & the Git Setup",
                "A Deployment Example with Heroku",
                "Storing User-generated Files on Heroku",
                "Deploying APIs",
                "Useful Resources & Links"
            ]
        },
        {
            "sectionName": "Testing Node.js Applications",
            "unitNames": [
                "Module Introduction",
                "What is Testing?",
                "Why & How?",
                "Setup and Writing a First Test",
                "Testing the Auth Middleware",
                "Organizing Multiple Tests",
                "What Not To Test!",
                "Using Stubs",
                "Testing Controllers",
                "Testing Asynchronous Code",
                "Setting up a Testing Database",
                "Testing Code With An Active Database",
                "Cleaning Up",
                "Hooks",
                "Testing Code That Requires Authentication",
                "Wrap Up & Mastering Tests",
                "Useful Resources & Links"
            ]
        },
        {
            "sectionName": "Node.js as a Build Tool & Using npm",
            "unitNames": [
                "Module Introduction",
                "npm & Node.js",
                "Using npm",
                "Versioning in package.json",
                "What is a Build Tool?",
                "Using Node.js in Build Processes",
                "Useful Resources & Links"
            ]
        },
        {
            "sectionName": "Modern JavaScript & NodeJS",
            "unitNames": [
                "Module Introduction",
                "What is this Module About?",
                "Working with ES Modules & Node",
                "More on ES Modules",
                "Node Core Modules & Promises",
                "Module Resources"
            ]
        },
        {
            "sectionName": "NodeJS & TypeScript",
            "unitNames": [
                "Module Introduction",
                "TypeScript: What & Why?",
                "TypeScript Setup",
                "Assigning Types",
                "Type Inference & Type Casting",
                "Configuring TypeScript",
                "Working with Union Types",
                "Using Object & Array Types",
                "Working with Type Aliases & Interfaces",
                "Understanding Generics",
                "A First Summary",
                "Node & TypeScript: Setup",
                "Getting Started with Node and TypeScript",
                "Writing TypeScript Express.js Code",
                "Adding REST Routes with TypeScript",
                "Finishing the REST Routes",
                "Testing the API",
                "Using Type Casting",
                "Moving to a Better Project Structure",
                "Wrap Up",
                "Module Resources"
            ]
        },
        {
            "sectionName": "An Introduction to Deno",
            "unitNames": [
                "Module Introduction",
                "What is Deno?",
                "Why Deno?",
                "Deno Setup",
                "Writing First Deno Code",
                "The Deno Runtime (Namespace) API",
                "Using the Runtime API",
                "Working with Deno Permissions",
                "Repeating the Example with Node",
                "How Deno Features Are Organized",
                "Using the Standard Library",
                "Creating a Webserver",
                "Using the Oak Framework with Deno",
                "More on Module URLs",
                "An Example Node REST API",
                "Re-building the REST API with Deno",
                "Should You Switch From Node to Deno?",
                "Module Resources"
            ]
        },
        {
            "sectionName": "Deno, CRUD & Databases (MongoDB)",
            "unitNames": [
                "Module Introduction",
                "App Setup",
                "Handling CORS Errors",
                "Connecting Deno to MongoDB",
                "Using the MongoDB Client Module",
                "Finishing the Deno MongoDB CRUD Operations",
                "Wrap Up",
                "Module Resources"
            ]
        },
        {
            "sectionName": "Roundup",
            "unitNames": [
                "Course Roundup",
                "Course Slides",
                "Bonus: More Content!"
            ]
        }
    ]
}