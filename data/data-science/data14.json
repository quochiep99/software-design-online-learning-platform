{
    "field": {
        "name": "data-science",
        "courses": []
    },
    "course": {
        "title": "Taming Big Data with Apache Spark and Python - Hands On!",
        "subtitle": "Apache Spark tutorial with 20+ hands-on examples of analyzing large data sets on your desktop or on Hadoop with Python!",
        "descriptions": [],
        "reviews": [],
        "students": [],
        "image1xURL": "https://img-a.udemycdn.com/course/240x135/622414_03f5_4.jpg",
        "image2xURL": "https://img-a.udemycdn.com/course/480x270/622414_03f5_4.jpg",
        "image3xURL": "https://img-a.udemycdn.com/course/750x422/622414_03f5_4.jpg",
        "discountPrice": 11.99,
        "originalPrice": 129.99,
        "numViews": 0,
        "curriculum": []
    },
    "reviews": [
        {
            "body": "Overall, the course is a great start to master big data analysis using Apache Spark via PySpark API.\n\nThe followings are the main strengths of the course.\n\n+ Emphasis on hands-on experience and practical scenarios.\n\n+ Good explanation of the concept of functions (e.g. machine learning algorithms) before using them.\n\n+ Emphasis on using the new cool API (DataFrame) rather than RDD.\n\nHowever, in my opinion, the following weaknesses could be improved.\n\n- A few inconsistencies between lectures due to the upgrade from Spark 2 (RDD) to Spark 3 (Dataframe).\n\nFor instance, in the Elastic MapReduce section, the RDD version of the movie-similarities script was used, which was different from the Dataframe version described in the previous section.\n\n- Lack of enough explanations about equivalent functions of RDD in Dataframe and column manipulation functions:\n\nFor example, it could have explained the partitioning in Dataframe API (e.g. `repartition`, `repartitionByRange`) or how to split and merge columns, etc...\n\nThanks, Frank! :)",
            "rating": 4.5
        },
        {
            "body": "I like the pace of the course, and the teaching assistant timely responds to my questions. I also appreciate the effort that went into transforming this course into its more dataframe-centric content.",
            "rating": 5
        },
        {
            "body": "Course is good and covers the almost all concepts and also gives some good handson feel.\n\nMore real life use cases of trouble shooting spark jobs and tuning can really make this course great.",
            "rating": 3.5
        },
        {
            "body": "Great, all things run with newbie as me.\n\n(just learnt only 1 course for big data: The Ultimate Hands-On Hadoop Tame your Big Data!)\n\nGood example.\n\nPlease improve GraphX lecture.\n\nIn addition, please demo \"Running Spark on a Cluster\" on multiple clusters on virtual box - instead of Amazon service.\n\nIn normal company, there are already many high performance computers (RAM: 64Gb , CPU: ~ 40 cores). While it's difficult to made some trial in Amazon service.",
            "rating": 5
        },
        {
            "body": "This is the best course I have ever taken for spark using python with very realistic examples. Thank you so much.",
            "rating": 5
        },
        {
            "body": "It was a very good course. I would have liked to find more examples on the Spark ML part, as well as code snippets to compute the accuracy/whatever goodness metric of the models.",
            "rating": 4
        },
        {
            "body": "Among the positive points in the course I highlight some challenging exercises, involving a little research. As points to improve, I understand that some demo scripts could be better designed for a better understanding of the use of spark. Another point to improve: the course starts with a lot of exercises, but then goes through a phase where the student becomes just an spectator, only returning to practice exercises at the end. Perhaps adding more exercises / challenges would be interesting. In general, I appreciated the course and the way instructor Frank expressed himself and taught the topics.",
            "rating": 4
        },
        {
            "body": "This course was excellent and exactly what I was looking for. The code in the videos are out of date at times, but the course resources are up-to-date. One thing I avoided was trying to figure out how to get it all installed locally and ended up using a docker container from bitnami. This took away all the complexity of dealing with running Spark within my laptop's OS.",
            "rating": 5
        },
        {
            "body": "The course is amazing. Frank got a great teaching experience who makes a learner to get a feeling of how interesting it is to solve real world problems using Big Data tools.",
            "rating": 5
        },
        {
            "body": "The author has put in a great effort in explaining the concept of spark. The lectures help in translating the problem in a way it can be implemented in spark. The hands-on and dataset used to explain the concepts are well defined. Overall I would highly recommend this course to anyone who wants to start using Spark for data analysis tasks.",
            "rating": 5
        },
        {
            "body": "Good course and explanations for Spark beginners. It would be nice if the movie recommendations script with the 1ml data set would support Python3. It would be a huge time saver for me as I need to build my own test harness.",
            "rating": 4
        },
        {
            "body": "Awesome course, good foundation for solving problems with spark. One thing I would suggest would be setting up a better dev environment. I used the docker command instead of the spark install instructions in the course and found it much easier to test the example scripts.\n\n> Install docker\n\n> run this docker command:\n\ndocker run --rm -p 10000:8888 -e JUPYTER_ENABLE_LAB=yes -v \"$PWD\":/home/jovyan/work jupyter/all-spark-notebook\n\n> visit the browser at port 10000",
            "rating": 4
        }
    ],
    "students": [
        {
            "name": "Aref Razavi",
            "email": "arefrazavi@gmail.com",
            "password": "arefrazavi",
            "role": "s",
            "isConfirmed": true
        },
        {
            "name": "Emmanuel Omere",
            "email": "emmanuelomere@gmail.com",
            "password": "emmanuelomere",
            "role": "s",
            "isConfirmed": true
        },
        {
            "name": "Anonymous AtUdemy",
            "email": "anonymousatudemy@gmail.com",
            "password": "anonymousatudemy",
            "role": "s",
            "isConfirmed": true
        },
        {
            "name": "Nguyen Huu Nam",
            "email": "nguyenhuunam@gmail.com",
            "password": "nguyenhuunam",
            "role": "s",
            "isConfirmed": true
        },
        {
            "name": "Siddharth",
            "email": "siddharth@gmail.com",
            "password": "siddharth",
            "role": "s",
            "isConfirmed": true
        },
        {
            "name": "Ismael Sanchez Torreguitart",
            "email": "ismaelsancheztorreguitart@gmail.com",
            "password": "ismaelsancheztorreguitart",
            "role": "s",
            "isConfirmed": true
        },
        {
            "name": "Sergio Coutinho",
            "email": "sergiocoutinho@gmail.com",
            "password": "sergiocoutinho",
            "role": "s",
            "isConfirmed": true
        },
        {
            "name": "Tim Barley",
            "email": "timbarley@gmail.com",
            "password": "timbarley",
            "role": "s",
            "isConfirmed": true
        },
        {
            "name": "Srikanth Chitukula",
            "email": "srikanthchitukula@gmail.com",
            "password": "srikanthchitukula",
            "role": "s",
            "isConfirmed": true
        },
        {
            "name": "Dharanidaran Aladiyur Paramasivan",
            "email": "dharanidaranaladiyurparamasivan@gmail.com",
            "password": "dharanidaranaladiyurparamasivan",
            "role": "s",
            "isConfirmed": true
        },
        {
            "name": "Diana Fike",
            "email": "dianafike@gmail.com",
            "password": "dianafike",
            "role": "s",
            "isConfirmed": true
        },
        {
            "name": "Scott Dean",
            "email": "scottdean@gmail.com",
            "password": "scottdean",
            "role": "s",
            "isConfirmed": true
        }
    ],
    "instructor": {
        "name": "Sundog Education by Frank Kane",
        "email": "sundogeducationbyfrankkane@gmail.com",
        "password": "sundogeducationbyfrankkane",
        "role": "i",
        "briefIntroduction": "<p>Sundog Education's mission is to make highly valuable career skills in <strong>big data, data science, and machine learning</strong> accessible to everyone in the world. Our consortium of expert instructors shares our knowledge in these emerging fields with you, at prices anyone can afford.&nbsp;</p><p>Sundog Education is led by Frank Kane and owned by Frank's company, Sundog Software LLC.&nbsp;Frank spent 9 years at <strong>Amazon</strong> and <strong>IMDb</strong>, developing and managing the technology that automatically delivers product and movie recommendations to hundreds of millions of customers, all the time. Frank holds <strong>17 issued patents</strong> in the fields of <strong>distributed computing</strong>, <strong>data mining</strong>, and <strong>machine learning</strong>. In 2012, Frank left to start his own successful company, Sundog Software, which focuses on virtual reality environment technology, and teaching others about big data analysis.</p><p><strong>Due to our volume of students we are unable to respond to private messages; please post your questions within the Q&amp;A of your course. Thanks for understanding.</strong></p>",
        "isConfirmed": true
    },
    "curriculum": [
        {
            "sectionName": "Getting Started with Spark",
            "unitNames": [
                "Introduction",
                "How to Use This Course",
                "Udemy 101: Getting the Most From This Course",
                "[Activity]Getting Set Up: Installing Python, a JDK, Spark, and its Dependencies.",
                "[Activity] Installing the MovieLens Movie Rating Dataset",
                "[Activity] Run your first Spark program! Ratings histogram example."
            ]
        },
        {
            "sectionName": "Spark Basics and the RDD Interface",
            "unitNames": [
                "What's new in Spark 3?",
                "Introduction to Spark",
                "The Resilient Distributed Dataset (RDD)",
                "Ratings Histogram Walkthrough",
                "Key/Value RDD's, and the Average Friends by Age Example",
                "[Activity] Running the Average Friends by Age Example",
                "Filtering RDD's, and the Minimum Temperature by Location Example",
                "[Activity]Running the Minimum Temperature Example, and Modifying it for Maximums",
                "[Activity] Running the Maximum Temperature by Location Example",
                "[Activity] Counting Word Occurrences using flatmap()",
                "[Activity] Improving the Word Count Script with Regular Expressions",
                "[Activity] Sorting the Word Count Results",
                "[Exercise] Find the Total Amount Spent by Customer",
                "[Excercise] Check your Results, and Now Sort them by Total Amount Spent.",
                "Check Your Sorted Implementation and Results Against Mine."
            ]
        },
        {
            "sectionName": "SparkSQL, DataFrames, and DataSets",
            "unitNames": [
                "Introducing SparkSQL",
                "[Activity] Executing SQL commands and SQL-style functions on a DataFrame",
                "Using DataFrames instead of RDD's",
                "[Exercise] Friends by Age, with DataFrames",
                "Exercise Solution: Friends by Age, with DataFrames",
                "[Activity] Word Count, with DataFrames",
                "[Activity] Minimum Temperature, with DataFrames (using a custom schema)",
                "[Exercise] Implement Total Spent by Customer with DataFrames",
                "Exercise Solution: Total Spent by Customer, with DataFrames"
            ]
        },
        {
            "sectionName": "Advanced Examples of Spark Programs",
            "unitNames": [
                "[Activity] Find the Most Popular Movie",
                "[Activity] Use Broadcast Variables to Display Movie Names Instead of ID Numbers",
                "Find the Most Popular Superhero in a Social Graph",
                "[Activity] Run the Script - Discover Who the Most Popular Superhero is!",
                "[Exercise] Find the Most Obscure Superheroes",
                "Exercise Solution: Most Obscure Superheroes",
                "Superhero Degrees of Separation: Introducing Breadth-First Search",
                "Superhero Degrees of Separation:  Accumulators, and Implementing BFS in Spark",
                "[Activity] Superhero Degrees of Separation: Review the Code and Run it",
                "Item-Based Collaborative Filtering in Spark, cache(), and persist()",
                "[Activity] Running the Similar Movies Script using Spark's Cluster Manager",
                "[Exercise] Improve the Quality of Similar Movies"
            ]
        },
        {
            "sectionName": "Running Spark on a Cluster",
            "unitNames": [
                "Introducing Elastic MapReduce",
                "[Activity] Setting up your AWS / Elastic MapReduce Account and Setting Up PuTTY",
                "Partitioning",
                "Create Similar Movies from One Million Ratings - Part 1",
                "[Activity] Create Similar Movies from One Million Ratings - Part 2",
                "Create Similar Movies from One Million Ratings - Part 3",
                "Troubleshooting Spark on a Cluster",
                "More Troubleshooting, and Managing Dependencies"
            ]
        },
        {
            "sectionName": "Machine Learning with Spark ML",
            "unitNames": [
                "Introducing MLLib",
                "[Activity] Using Spark ML to Produce Movie Recommendations",
                "Analyzing the ALS Recommendations Results",
                "[Activity] Linear Regression with Spark ML",
                "[Exercise] Using Decision Trees in Spark ML to Predict Real Estate Prices",
                "Exercise Solution: Decision Trees with Spark"
            ]
        },
        {
            "sectionName": "Spark Streaming, Structured Streaming, and GraphX",
            "unitNames": [
                "Spark Streaming",
                "[Activity] Structured Streaming in Python",
                "[Exercise] Use Windows with Structured Streaming to Track Most-Viewed URL's",
                "Exercise Solution: Using Structured Streaming with Windows",
                "GraphX"
            ]
        },
        {
            "sectionName": "You Made It! Where to Go from Here.",
            "unitNames": [
                "Learning More about Spark and Data Science",
                "Bonus Lecture: More courses to explore!"
            ]
        }
    ]
}